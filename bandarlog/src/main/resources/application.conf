#******************************************************************************
# Copyright 2018, Oath Inc.
# Licensed under the terms of the Apache Version 2.0 license.
# See LICENSE file in project root directory for terms.
#******************************************************************************

#
# Example of application.conf file
#
datadog-config {                                       # datadog config
  host = ${?DATADOG_HOST}
}

kafka-config {
  brokers = null                                                                  # default list of brokers, currently is disabled and taken from zookeeper
  zk-quorum = "1.1.1.1"                                                           # zookeeper servers
}

glue-config {                                                                     # data source config
  region = "region"                                                               # aws region
  dbname = "database"                                                             # database name
  access.key = "accesskey"                                                        # access key provided by AWS account
  secret.key = "secretaccesskey"                                                  # secret key provided by AWS account
  fetch.size = 10                                                                 # the maximum number of partitions to return in a single response. Maximum possible value - 1000
  segment.total.number = 10                                                       # the total number of segments - non-overlapping region of a table's partitions. Maximum possible value - 10
  maxwait.timeout.seconds = 60                                                    # timeout to complete glue request
}

presto-config {                                                                   # data source config
  host = "example.host.com"
  port = 8889
  username = "username"
  password = "password"
  schema = "schema"
  dbname = "dbname"
  max.pool.size = 10
  connection.timeout.ms = 60000
}

vertica-config {                                                                  # data source config
  host = "example.host.com"
  port = "5433"
  dbname = "dbname"
  username = "username"
  password = "password"
  schema = "schema"
  use-ssl = true
  max.pool.size = 10
  connection.timeout.ms = 60000
}

bandarlogs {                                                                      # system object, all bandarlogs should be inside it

  kafka-bandarlogs {                                   # kafka bandarlog name, can be any name

    enabled = false                                    # flag to enable/disable bandarlog

    connector = "kafka-config"                         # kafka connector with reference to kafka config

    bandarlog-type = "kafka"                           # bandarlog type, can be 'kafka' or 'sql'

    metrics = ["IN", "OUT", "LAG"]                     # list of metrics which are should be calculated and reported for the chosen data sources

    reporters = [                                      # list of reporters, where each metric should be reported
      {
        type = "datadog"                               # reporter type
        config-id = "datadog-config"                   # reference to reporter config
      }
    ]

    report {
      prefix = "kafka_metrics"                         # report prefix which should be used for reported metrics (kafka_metrics.in_messages..)
      interval.sec = 60                                # reporter running interval
    }

    scheduler {                                        # scheduler specifies bandar-log execution time
      delay.seconds = 0                                # delay in seconds before bandarlog is to be executed
      scheduling.seconds = 60                          # time in seconds between bandarlog executions
    }

    topics = [                                         # list of topics, which should be used to get data for the chosen metrics
      {
        topic-id = "topic_id_1"                        # user-friendly topic id, every metric will be tagged with this topic id
        topic = ["topic_value"]                        # kafka topic
        group-id = "group_id_1"                        # kafka group id
      },
      {
        topic-id = "topic_id_n"
        topic = ["topic_value"]
        group-id = "group_id_n"
      }
    ]
  }

  in-out-bandarlogs {                                                             # sql bandarlog name, can be any name

    enabled = false                                                               # flag to enable/disable bandarlog

    bandarlog-type = "sql"                                                        # bandarlog type, can be 'kafka' or 'sql'

    column-type = "timestamp"                                                     # type of partition column, e.g., "datetime" (date, timestamp), "timestamp" (timestamp measured in milliseconds), "default" (timestamp measured in milliseconds)

    metrics = ["IN", "OUT", "LAG", "REALTIME_LAG"]                                # list of metrics which are should be calculated and reported for the chosen data sources

    reporters = [                                                                 # list of reporters, where each metric should be reported
      {
        type = "datadog"                                                          # reporter type
        config-id = "datadog-config"                                              # reference to reporter config
      }
    ]

    report {
      prefix = "presto_vertica_metrics"                                           # report prefix which should be used for reported metrics (presto_vertica_metrics.lag..)
      interval.sec = 60                                                           # reporter running interval
    }

    in-connector {                                                                # data source connector for IN metric
      type = "presto"                                                             # connector/datasource type (presto, vertica...)
      config-id = "presto-config"                                                 # reference to the data source config
      tag = "presto-tag-name"                                                     # tag name which should be reported with metric
    }

    out-connectors = [                                                            # list of data source connectors for OUT metrics
      {
        type = "vertica"
        config-id = "vertica-config"
        tag = "vertica-tag-name"
      },
      {
        type = "glue"
        config-id = "glue-config"
        tag = "glue-tag-name"
      }
    ]

    scheduler {                                                                   # scheduler specifies bandar-log execution time
      delay.seconds = 0                                                           # delay in seconds before bandarlog is to be executed
      scheduling.seconds = 180                                                    # time in seconds between bandarlog executions
    }

    tables = [                                                                    # list of tables, which should be used to get data for the chosen metrics
      {                                                                           # config for table when column-type = datetime
        in-table = "in_table_1"                                                   # table name for for the IN metric
        in-columns = ["in_column_1=in_format_1", "in_column_2=in_format_2"]       # <column>=<format> pairs for the IN metric
        out-table = "out_table_1"                                                 # table name for for the OUT metric
        out-columns = ["out_column_1=out_format_1", "out_column_2=out_format_2"]  # <column>=<format> pairs for the OUT metric
      },
      {                                                                           # config for table when column-type = datetime
        in-table = "in_table_2"                                                   # table name for for the IN metric
        in-columns = ["in_column_1=in_format_1"]                                  # <column>=<format> pair for the IN metric
        out-table = "out_table_2"                                                 # table name for for the OUT metric
        out-columns = ["out_column_1=out_format_1"]                               # <column>=<format> pair for the OUT metric
      },
      {                                                                           # config for table when column-type = timestamp
        in-table = "in_table_3"                                                   # table name for for the IN metric
        in-columns = ["in_column_3"]                                              # column name for the IN metric
        out-table = "out_table_3"                                                 # table name for for the OUT metric
        out-columns = ["out_column_3"]                                            # column name for the OUT metric
      },
      {                                                                           # config for table when column-type = default
        in-table = "in_table_n:in_column_n"                                       # <table>:<column> pair for the IN metric
        out-table = "out_table_n:out_column_n"                                    # <table>:<column> pair for the IN metric
      }
    ]
  }
}

